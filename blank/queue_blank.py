from collections import deque
from typing import Any, List

class QueueWithList:
    """A queue implementation using a Python list (inefficient for pop)."""
    def __init__(self):
        ...

    def enqueue(self, item: Any) -> None:
        ...

    def dequeue(self) -> Any:
        ...

    def peek(self) -> Any:
        ...

    def is_empty(self) -> bool:
        ...

    def size(self) -> int:
        ...

class Queue:
    """An efficient queue implementation using collections.deque."""
    def __init__(self):
        ...

    def enqueue(self, item: Any) -> None:
        ...

    def dequeue(self) -> Any:
        ...

    def peek(self) -> Any:
        ...

    def is_empty(self) -> bool:
        ...

    def size(self) -> int:
        ...

# =========================================
# --- Classic Queue Problems
# =========================================

def number_of_islands():...
def walls_and_gates():...
def moving_average():...
def circular_queue():...